spring :
  data :
    mongodb:
      uri : mongodb+srv://isaac815:32uIydv3OhFMtts2@isaac.2ql1u.mongodb.net/clothesDB?retryWrites=true&w=majority&appName=isaac
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 10MB    # 최대 파일 크기 설정
      max-request-size: 10MB # 최대 요청 크기 설정
  kafka:
    consumer:
      group-id: test-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    template:
      default-topic: example-topic
    bootstrap-servers: kafka:9092  # Docker 내부에서 Kafka와 연결
    topic:
      default-topic: example-topic

aws:
  s3:
    bucket: even-t
  stack:
    auto: false
  region:
    static: ap-northeast-2
  credentials:
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}

logging:
  level:
    org.springframework.security: DEBUG

fastapi:
  base-url: http://api-spring:8000
  # 외부에 연결 할 때는 외부 ip 연결해야 함

pinecone:
  api-key: pcsk_5Tek8C_2jszqqXR4SYhrCTU7e4RFtR5e4wgZyHcu2bkL59BvJckh7BdticLezEq673MPCc
#  ${API_Key}
  api-url : https://event-u22vct8.svc.aped-4627-b74a.pinecone.io
#  ${INDEX_URL}
  environment : us-east-1
  index-name : even-t
